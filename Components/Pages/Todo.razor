@page "/todo"
@rendermode InteractiveServer
@inject ConfettiService ConfettiService


<link href="bootstrap/bootstrap.min.css" rel="stylesheet" />
<link href="app.css" rel="stylesheet" />

<PageTitle>ClearList</PageTitle>
<div>


<span class="logo-name"> ClearList </span>
<h3>New Task</h3>


<input  class="task-input" placeholder="Add A New Task" @bind="newTodo" />
<button type="button" class="custom-button" @onclick="AddTodo"> Add Task</button>


  <h4> Tasks </h4>

     <h5> Completed Items: @CompletedItems()</h5>


        @if (CompletedItems() > 3)
        {
            <p> You've completed more than 3 tasks! Congratulations  </p>
        }

<ol>
    @foreach (var todo in todos)
    {
        <div class="task">
        <li>
         <input class="task-box" type="checkbox" @bind="todo.IsDone" />
         <input class="task-item" @bind="todo.Title" />
         </li>
         </div>
    }
</ol>

  

 
 

</div>

@code {
    private List<TodoItem> todos = new();

    private string? newTodo;

    private void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            todos.Add(new TodoItem { Title = newTodo });
            newTodo = string.Empty;
        }

    }

    private int CompletedItems()
    {
        var CompleteTaskCount = @todos.Count(todo => todo.IsDone);

        if(CompleteTaskCount > 3)
        {
            Console.WriteLine("More than 3 tasks completed");
        }


        
        return CompleteTaskCount;

    }

    private ElementReference button;

    private void Activate()
    {
        ConfettiOptions options = new()
            {
                Colors = ["silver", "gold", "red", "blue", "green"],
                Pieces = 900,
                Mode = ConfettiOriginMode.FromElement,
                Origin = button,
                Milliseconds = 2000,
                VariationInMilliseconds = 500
            };

            ConfettiService.Activate(options);
    }
}
